/****************************************************************************
*   Bianchi Alessio                	4Â°H                              	    *
*                                                                       	*
*                                                                         	*
*     	Funzioni matrici                                              	    *
*                                                                       	*
*                                                                       	*
*              	15/09/22                                                 	*
*****************************************************************************/
 
//inclusione librerie e costanti
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <limits.h>
#include <limits.h>
 
#define R 10
#define C 10
                                          
//dichiarazione funzioni
int menu(void);
 
void vettore_random(int [],int n);
void matrice_random(int [][C],int r,int c);
void vettore_man(int [],int n);
void matrice_man(int [][C],int r,int c);
void bubble_sort(int [],int);
void stampa( int [][C]);
void stampavet( int [C]);
int ricerca(int [][C],int x);
void min_max(int [][C]);
 
 
int main()
{
    int vet[C],mat[R][C],m,c=C,r=R,x,s,interrupt=1;  
	srand(time(NULL));   
do
{
    m=menu();
    switch(m)
    {
    	
    case 0:
    printf("chiusura del programma");
    interrupt=0;    
   	break;
   	 
   	 case 1:
    	matrice_random(mat,R,C);    
   	 break;
   	 
   	 case 2:
    	matrice_man(mat,R,C);    
   	 break;
   	 
   	 case 3:
   	 	bubble_sort(mat[0],r*c);
   	 break;
   	 
   	 case 4:
    	stampa(mat);
   	 break;
   	 
   	 case 5:
   	 printf("inserisci un numero da cercare: ");
   	 scanf("%d",&x);
    	s=ricerca(mat,x);
	 
    	if(s==-1)
    	printf("numero non trovato");
    	else  
    	printf("numero troato all indice %d",s);
   	 break;
   	 
   	 case 6:
   	 min_max(mat);
   	 break;
   	 
 
    }    

}while(interrupt!=0);
	
    return 0;    
    
}
int menu(void)// menu per la scelta delle funzioni
{
    int scelta;
    printf("scegli 0 per interrompere il programma\n");
    printf("scegli 1 per caricare la matrice casualmente\n");
    printf("scegli 2 per caricare la matrice manualmente\n");
    printf("scegli 3 per ordinare la matrice \n");
    printf("scegli 4 per stampare la matrice \n");
    printf("scegli 5 per cercare il minimo ed il massimo nella matrice \n");
    scanf("%d",&scelta);
    
    system ("cls");
    return scelta;
}
 
void vettore_random(int v[])//carica un vettore casualmente
{
    int i;
    
    for(i=0;i<C;i++)
    {
   	 v[i]=rand()%1000;
    }
    
    
}
 
void matrice_random(int mat[][C],int r,int c)//carica una matrice casualmente
{
    int i;
    for(i=0;i<R;i++)
    {
   	 vettore_random(mat[i]);    
    }   	 
}
 
void vettore_man(int v[])//carica un vettore manualmente
{
    int i;
 
    
    for(i=0;i<C;i++)
    {
   	 scanf("%d",&v[i]);
    }
    
    
}
 
void matrice_man(int m[][C],int r,int c)//carica una matrice manualmente
{
    int i,cont=1;
    for(i=0;i<c;i++)
    {
    	printf("caricando la %da riga:\n",cont);
   	vettore_man(m[i]);  
   	cont++;
    }
   		 
}
 
void bubble_sort(int vet[],int d)//ordinamento bubble sort
{
	int scambio,i,a;

	do
	{
  	scambio=0;
  	for(i=0;i<d-1;i++)
  	{
      	if(vet[i]>vet[i+1])
      	{
          	a=vet[i];
          	vet[i]=vet[i+1];
          	vet[i+1]=a;
          	scambio=1;
      	}
  	}
	}while(scambio!=1);
   
}


 
void stampavet(int vet[C])//stampa un vettore
{
	int i;
	for(i=0;i<C;i++)
	{
    	printf("%d ",vet[i]);
	}
}
void stampa(int mat[][C])//stampa la matrice per righe
{
	int i;
	 
	for(i=1;i<=R;i++)
	{
    	printf("%da riga\n",i);
    	stampavet(mat[i]);
    	printf("\n");
	}
}
 
int ricerca(int mat[][C],int x)//cerca un numero nella matrice
{
	int i,j,indice=-1;
	 
	for(i=0;i<R;i++)
	{
    	for(j=0;j<C;j++)
    	{
        	if(mat[j][i]==x)
        	indice=i;
    	}
	}
	 
	return indice;
}
 
void min_max(int mat[][C])//cerca il minimo ed il massimo nella matrice
{
	int i,j,max=INT_MIN,min=INT_MAX;
	 
	for(i=0;i<R;i++)
	{
    	for(j=0;j<C;j++)
    	{
        	if(mat[j][i]>max)
        	max=mat[j][i];
        	 
        	if(mat[j][i]<min)
        	min=mat[j][i];
       	 
    	}
	}
	 
	printf("il numero massimo e:%d\nil numero minimo e:%d",max,min);
}
 
 
 

